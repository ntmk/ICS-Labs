SELECT CUST.CUSTOMER_ID, PPL.CURRENT_FIRST_NAME,
PPL.CURRENT_LAST_NAME, PPL.BIRTH_DATE, 
PPL.GENDER, PPL.MARITAL_STATUS,
CUST.CREDIT_LIMIT, CM.ADDRESS1,
CM.ADDRESS2, CM.POSTAL_CODE,
GB.CITY_NAME, GB.PROV_NAME,
GB.COUNTRY_NAME

FROM COMP259DB.PEOPLE PPL, COMP259DB.PARTIES PTY, COMP259DB.PARTY_ROLES PRL, 
COMP259DB.CUSTOMERS CUST, COMP259DB.PARTY_CONTACT_MECHANISMS PCM, 
COMP259DB.GEOGRAPHIC_BOUNDARIES GB, COMP259DB.CONTACT_MECHANISMS CM

WHERE CUST.CUSTOMER_ID = PRL.CUSTOMER_ID AND PTY.PARTY_ID = PRL.PARTY_ID 
AND PCM.PARTY_ID = PTY.PARTY_ID AND PTY.PERSON_ID = PPL.PERSON_ID AND 
CM.CONTACT_MECHANISM_ID = PCM.CONTACT_MECHANISM_ID AND CM.GEO_ID = GB.GEO_ID;

=================================================================================
CURSOR FOR PART 4
=================================================================================
CREATE OR REPLACE PROCEDURE E_DATA
AS

CURSOR C_CUSTOMERS
IS
	SELECT CUST.CUSTOMER_ID, PPL.CURRENT_FIRST_NAME, PPL.CURRENT_LAST_NAME, 
	ROUND(MONTHS_BETWEEN(SYSDATE, PPL.BIRTH_DATE)/12) AS AGE, PPL.GENDER, PPL.MARITAL_STATUS, CUST.CREDIT_LIMIT, CM.ADDRESS1,
	CM.ADDRESS2, CM.POSTAL_CODE, GB.CITY_NAME, GB.PROV_NAME, GB.COUNTRY_NAME

	FROM COMP259DB.PEOPLE PPL, COMP259DB.PARTIES PTY, COMP259DB.PARTY_ROLES PRL, 
	COMP259DB.CUSTOMERS CUST, COMP259DB.PARTY_CONTACT_MECHANISMS PCM, 
	COMP259DB.GEOGRAPHIC_BOUNDARIES GB, COMP259DB.CONTACT_MECHANISMS CM

	WHERE CUST.CUSTOMER_ID = PRL.CUSTOMER_ID AND PTY.PARTY_ID = PRL.PARTY_ID 
	AND PCM.PARTY_ID = PTY.PARTY_ID AND PTY.PERSON_ID = PPL.PERSON_ID AND 
	CM.CONTACT_MECHANISM_ID = PCM.CONTACT_MECHANISM_ID AND CM.GEO_ID = GB.GEO_ID;
    
          
V_CR_STATUS 		VARCHAR(10);
V_MARITAL_STATUS 	VARCHAR(10);
V_GENDER			VARCHAR(10);
V_AGE_RANGE 		VARCHAR(15);
V_DEMOGRAPHIC       SA_CUSTOMER_DEMOGRAPHICS%TYPE;
BEGIN

	FOR REC_CUSTOMERS IN C_CUSTOMERS
		
		LOOP
		
			CASE
			
				WHEN REC_CUSTOMERS.CREDIT_LIMIT >= 1500 THEN V_CR_STATUS := 'GOOD';
				WHEN REC_CUSTOMERS.CREDIT_LIMIT < 1500 THEN V_CR_STATUS := 'POOR';
				WHEN REC_CUSTOMERS.CREDIT_LIMIT IS NULL THEN V_CR_STATUS := 'UNKNOWN';
				
            END CASE;
            CASE
			
            	WHEN REC_CUSTOMERS.MARITAL_STATUS = 'S' THEN V_MARITAL_STATUS := 'SINGLE';
				WHEN REC_CUSTOMERS.MARITAL_STATUS = 'D' THEN V_MARITAL_STATUS := 'DIVORCED';
				WHEN REC_CUSTOMERS.MARITAL_STATUS = 'W' THEN V_MARITAL_STATUS := 'WIDOWED';
				WHEN REC_CUSTOMERS.MARITAL_STATUS = 'M' THEN V_MARITAL_STATUS := 'MARRIED';
				WHEN REC_CUSTOMERS.MARITAL_STATUS IS NULL THEN V_MARITAL_STATUS := 'UNKNOWN';

            END CASE;
            CASE
			
				WHEN REC_CUSTOMERS.GENDER = 'M' THEN V_GENDER := 'MALE';
				WHEN REC_CUSTOMERS.GENDER = 'F' THEN V_GENDER := 'FEMALE';
				WHEN REC_CUSTOMERS.GENDER IS NULL THEN V_GENDER := 'UNKNOWN';
				
            END CASE;
            CASE
			
				WHEN REC_CUSTOMERS.AGE < 18 THEN V_AGE_RANGE := 'LESS THAN 18';
				WHEN REC_CUSTOMERS.AGE <= 25 THEN V_AGE_RANGE := '18 TO 25';
				WHEN REC_CUSTOMERS.AGE <= 35 THEN V_AGE_RANGE := '26 TO 35';
				WHEN REC_CUSTOMERS.AGE <= 45 THEN V_AGE_RANGE := '36 TO 45';
				WHEN REC_CUSTOMERS.AGE <= 55 THEN V_AGE_RANGE := '46 TO 55';
				WHEN REC_CUSTOMERS.AGE <= 65 THEN V_AGE_RANGE := '56 TO 65';
				WHEN REC_CUSTOMERS.AGE <= 65 THEN V_AGE_RANGE := 'MORE THAN 65';
				WHEN REC_CUSTOMERS.AGE <= 65 THEN V_AGE_RANGE := 'NULL';
				
			END CASE;
	
	SELECT CUSTOMER_DEMOGRAPHICS_PK 
    INTO V_DEMOGRAPHIC
    FROM SA_CUSTOMER_DEMOGRAPHICS
    WHERE CREDIT_RATING = V_CR_STATUS AND MARITAL_STATUS = V_MARITAL_STATUS 
	AND AGE_RANGE = V_AGE_RANGE AND GENDER = V_GENDER;
    
	INSERT INTO (SA_CUSTOMERS CUSTOMER_ID, CUSTOMER_NAME)
	VALUES (REC_CUSTOMERS.CUSTOMER_ID, (REC_CUSTOMERS.CURRENT_FIRST_NAME || ' ' || 
	REC_CUSTOMERS.CURRENT_LAST_NAME));
	
    INSERT INTO SA_ADDRESS (ADDRESS_1, ADDRESS_2, CITY_NAME, POSTAL_CODE, PROVINCESTATE_NAME,
	COUNTRY_NAME)
	VALUES (REC_CUSTOMERS.ADDRESS_1, REC_CUSTOMERS.ADDRESS_2, REC_CUSTOMERS.CITY_NAME,
	REC_CUSTOMERS.POSTAL_CODE, REC_CUSTOMERS.PROVINCESTATE_NAME, REC_CUSTOMERS.COUNTRY_NAME);
    
	CREATE SEQUENCE CAMOSUN_DB.CUST_COUNT
	AS
	START WITH
	INCREMENT BY ;
	
	INSERT INTO SA_CUSTOMER_SALES_FACTS (CUSTOMER_PK, ADDRESS_PK, CUSTOMER_DEMOGRAPHIC_PK)
	
    
    COMMIT;
    
    END LOOP;
	
END;

==================================================================
SYSTEM VIEW COMP259TABLE
==================================================================

COLUMN NAME FORMAT A20;
COLUMN ADDRESS FORMAT A50;
COLUMN AGE FORMAT A20;
SELECT CUST.CUSTOMER_ID, PPL.CURRENT_FIRST_NAME || ' ' || PPL.CURRENT_LAST_NAME AS NAME, 
	CM.ADDRESS1 || ' ' || CM.ADDRESS2 || ', ' || CM.POSTAL_CODE || ' ' || GB.CITY_NAME || ' ' || GB.PROV_NAME || ' ' || GB.COUNTRY_NAME AS ADDRESS,
    ROUND(MONTHS_BETWEEN(SYSDATE, PPL.BIRTH_DATE)/12) AS AGE, PPL.GENDER AS GENDER,
    PPL.MARITAL_STATUS AS MARITAL_STATUS, CUST.CREDIT_LIMIT AS CREDIT_LIMIT

	FROM COMP259DB.PEOPLE PPL, COMP259DB.PARTIES PTY, COMP259DB.PARTY_ROLES PRL, 
	COMP259DB.CUSTOMERS CUST, COMP259DB.PARTY_CONTACT_MECHANISMS PCM, 
	COMP259DB.GEOGRAPHIC_BOUNDARIES GB, COMP259DB.CONTACT_MECHANISMS CM

	WHERE CUST.CUSTOMER_ID = PRL.CUSTOMER_ID AND PTY.PARTY_ID = PRL.PARTY_ID 
	AND PCM.PARTY_ID = PTY.PARTY_ID AND PTY.PERSON_ID = PPL.PERSON_ID AND 
	CM.CONTACT_MECHANISM_ID = PCM.CONTACT_MECHANISM_ID AND CM.GEO_ID = GB.GEO_ID;

		